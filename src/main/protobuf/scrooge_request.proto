syntax = "proto3";

import "scrooge_message.proto";
import "scrooge_networking.proto";

package scrooge;
option go_package="/scrooge";

// Message with data to make the scrooge application do an action
message ScroogeRequest {
    oneof request {
        SendMessageRequest send_message_request = 1;
        SetClusterConfigRequest set_cluster_config_request = 2;
        AuthenticateMessageRequest authenticate_message_request = 3;
    }
}

// Message to make scrooge send a message to another RSM over the scrooge protocol
message SendMessageRequest {
    // Identifier of which cluster to send this message on
    ClusterIdentifier cluster_identifier = 1;
    // The content and scrooge bookkeeping logic needed by scrooge for correctness
    CrossChainMessageData content = 2;
     // A proof generated by the entire RSM proving that the message contents are valid
     // and intended for the `cluster_identifier` RSM
    bytes validity_proof = 3;
}

// Message to make scrooge update its internal idea of a network configuration
message SetClusterConfigRequest {
    // Configuration to be put in place
    ClusterConfiguration cluster_configuration = 1;
}

message AuthenticateMessageRequest {
    // Identifier of the message in question
    MessageIdentifier message_identifier = 1;
    // whether to accept or reject the message, default is reject
    bool accept_message = 2;
}

