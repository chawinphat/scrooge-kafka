syntax = "proto3";

import "scrooge_message.proto";

package scrooge;
option go_package="/scrooge";

// Message with data scrooge sends to appliaction/protocol users
message ScroogeTransfer {
    oneof transfer {
        CrossChainMessage unvalidated_cross_chain_message = 1;
		CommitAcknowledgment commit_acknowledgment = 2;
        KeyValue key_value_update = 3;
        KeyValueHash key_value_hash = 4;
    }
}

message UnvalidatedCrossChainMessage {
    // An unique identifier used to identify this message
    MessageIdentifier message_identifier = 1;
    // The content and scrooge book keeping logic needed by scrooge for correctness
    CrossChainMessageData data = 2;
     // A proof that the message data is valid and signed off by the entire sending RSM
    bytes validity_proof = 3;
}

message CommitAcknowledgment {
	// Sequence number of request committed at other RSM.
	uint64 sequence_number = 1;
}

message KeyValue {
    string key = 1;
    string value = 2;
}

message KeyValueHash {
    string key = 1;
    string value_md5_hash = 2;
}
